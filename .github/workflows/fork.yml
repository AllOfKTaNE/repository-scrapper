name: Fork new repositories
on:
  workflow_dispatch
  #schedule:
  # - cron: '0 3 * * *'
jobs:
  use_api:
    runs-on: ubuntu-latest
    steps:
      - env:
          TOKEN: ${{ secrets.TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOS: ${{ vars.REPOS }}
        run: |
          function isforked {
            # check if the current $repo has already been forked
            if [[ "$1" = *"$2"* ]]; then
                echo "Fork found for $2, skipping"
                return 0
            echo "No fork found for $2 in $1"
            return 1
          }

          function fork {
            curl \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              $1/forks \
              -d "$2"
          }

          # get source code links from ktane.timwi.de
          repos=$(curl https://ktane.timwi.de/json/raw | jq -r ".KtaneModules[].SourceUrl | select( . != null)" | cut -d/ -f4-5)
          # get list of forked repositories
          
          for repo in $repos; do
            forkname=$(echo "$repo" | sed 's#/#-#g')
            if isforked "$REPOS" "$forkname"; then
              continue
            fi
            
            # Fork the new repository
            json=$(jq -n --arg name "$repo" '{"organization":"KTaNE-noi2coco", "name": $name, "default_branch_only": false}')
            echo "Forking $repo" as "$repo"
            out=$(fork https://api.github.com/repos/${repo} "$json")
            echo "out = $out"

            # Repo moved?
            message=$(jq -r ".message" <<< "$out")
            echo "Message: $message"
            if [[ "$message" == *"already exists"* ]]; then
              REPOS="$REPOS;$repo"
            elif [[ "$message" == *"too quickly"* ]]; then
              break
            elif [ "$message" = "Not Found" ]; then
              getrepo=$(gh api -H "Accept: application/vnd.github+json" /repos/${repo} || echo "")
              url=$(jq -r ".url" <<< "$getrepo")
              echo "Get repo answer: $url"
              if [ "$url" != "null" ]; then
                echo "Forking $url as $repo, payload: $json"
                out=$(fork "$url" "$json")
                message=$(jq -r ".message" <<< "$out")
                if [ "$message" = "Name already exists on this account" ]; then
                  echo "$repo alreay exists"
                  continue
                fi
              fi
            fi
            REPOS="$REPOS;$repo"
            sleep 2
          done
          
          # Update the list of forks repository variable
          payload=$(jq -n --arg repos "$REPOS" '{"name":"REPOS","value": $repos}')
          curl \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $TOKEN"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/KTaNE-noi2coco/repository-scrapper/actions/variables/REPOS \
            -d "$payload"
